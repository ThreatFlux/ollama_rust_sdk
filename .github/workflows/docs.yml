name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-docs-${{ hashFiles('**/Cargo.lock') }}

    - name: Build documentation
      run: |
        cargo doc --all-features --no-deps
        echo '<meta http-equiv="refresh" content="0; url=ollama_rust_sdk/index.html">' > target/doc/index.html
        
    - name: Add examples to docs
      run: |
        mkdir -p target/doc/examples
        cp examples/*.rs target/doc/examples/
        
        # Create an index of examples
        cat > target/doc/examples/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Ollama Rust SDK Examples</title>
            <style>
                body { font-family: sans-serif; margin: 40px; }
                h1 { color: #333; }
                .example { margin: 10px 0; }
                a { color: #0366d6; text-decoration: none; }
                a:hover { text-decoration: underline; }
            </style>
        </head>
        <body>
            <h1>Ollama Rust SDK Examples</h1>
            <div class="example"><a href="basic_generation.rs">Basic Generation</a> - Simple text generation example</div>
            <div class="example"><a href="streaming_chat.rs">Streaming Chat</a> - Real-time streaming chat</div>
            <div class="example"><a href="embeddings.rs">Embeddings</a> - Generate and compare embeddings</div>
            <div class="example"><a href="tool_calling.rs">Tool Calling</a> - Function calling with tools</div>
            <div class="example"><a href="streaming_tools.rs">Streaming Tools</a> - Streaming with tool calls</div>
            <div class="example"><a href="parallel_tools.rs">Parallel Tools</a> - Parallel tool execution</div>
            <p><a href="../index.html">‚Üê Back to API Documentation</a></p>
        </body>
        </html>
        EOF
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: target/doc

  deploy-docs:
    name: Deploy Documentation
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  check-links:
    name: Check Documentation Links
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Link Checker
      uses: lycheeverse/lychee-action@v1
      with:
        args: >-
          --verbose
          --no-progress
          --accept 200,204,206,301,302
          --exclude-loopback
          --exclude-mail
          --exclude "localhost"
          --exclude "127.0.0.1"
          "**/*.md"
          "**/*.rs"
        fail: false  # Don't fail the build on broken links