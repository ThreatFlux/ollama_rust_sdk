name: Dependencies

on:
  schedule:
    # Check for updates every Monday at 3 AM UTC
    - cron: '0 3 * * 1'
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Update dependencies
      run: |
        cargo update
        cargo outdated --exit-code 1 || true
        
    - name: Test with updated dependencies
      run: |
        cargo test --all-features
        cargo build --all-features

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update dependencies"
        title: "chore: Weekly dependency updates"
        body: |
          ## Weekly Dependency Updates
          
          This PR contains the latest dependency updates.
          
          ### Updates
          ```
          $(cargo outdated)
          ```
          
          ### Checklist
          - [ ] All tests pass
          - [ ] No breaking changes
          - [ ] Security advisories addressed
        branch: deps/weekly-update
        delete-branch: true

  check-outdated:
    name: Check Outdated Dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-outdated
      run: cargo install cargo-outdated

    - name: Check outdated dependencies
      run: |
        echo "## Outdated Dependencies Report" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cargo outdated >> $GITHUB_STEP_SUMMARY || true
        echo '```' >> $GITHUB_STEP_SUMMARY
        
        # Check for major version updates
        if cargo outdated --format json | jq -r '.dependencies[] | select(.kind == "normal") | select(.version_latest | split(".")[0] != .version_current | split(".")[0])' | grep -q .; then
          echo "::warning::Major version updates available"
        fi